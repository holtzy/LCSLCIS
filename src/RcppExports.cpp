// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// LCS
List LCS(DataFrame order_1, DataFrame order_2);
RcppExport SEXP _LCSLCIS_LCS(SEXP order_1SEXP, SEXP order_2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type order_1(order_1SEXP);
    Rcpp::traits::input_parameter< DataFrame >::type order_2(order_2SEXP);
    rcpp_result_gen = Rcpp::wrap(LCS(order_1, order_2));
    return rcpp_result_gen;
END_RCPP
}
// LCIS
List LCIS(DataFrame order_1, DataFrame order_2);
RcppExport SEXP _LCSLCIS_LCIS(SEXP order_1SEXP, SEXP order_2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type order_1(order_1SEXP);
    Rcpp::traits::input_parameter< DataFrame >::type order_2(order_2SEXP);
    rcpp_result_gen = Rcpp::wrap(LCIS(order_1, order_2));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_LCSLCIS_LCS", (DL_FUNC) &_LCSLCIS_LCS, 2},
    {"_LCSLCIS_LCIS", (DL_FUNC) &_LCSLCIS_LCIS, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_LCSLCIS(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
